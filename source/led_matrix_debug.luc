module led_matrix_debug (
    input clk,  // clock
    input rst,  // reset
    input selector[2],
    input speed_sel[8],
    output outled[8],
    output outgnd[8],
    output outlevel[16]
  ) {

  matrix_writer matrix_writer(.clk(clk),.rst(rst));
  dff level_reg[16](#INIT(0),.clk(clk),.rst(rst));
  edge_detector frame_counter(#RISE(1),#FALL(0),.clk(clk));

  const SLOWCLOCK_SIZE = $clog2(3846153);  //26
  counter frame_rate(#SIZE(SLOWCLOCK_SIZE),.clk(clk),.rst(rst));  
    
  const SLOWCLOCK_SIZE2 = $clog2(4166666);  //24
  counter frame_rate2(#SIZE(SLOWCLOCK_SIZE2),.clk(clk),.rst(rst));

  const SLOWCLOCK_SIZE3 = $clog2(5000000);  //20
  counter frame_rate3(#SIZE(SLOWCLOCK_SIZE3),.clk(clk),.rst(rst));  
  
  const SLOWCLOCK_SIZE4 = $clog2(5555555);  //18
  counter frame_rate4(#SIZE(SLOWCLOCK_SIZE4),.clk(clk),.rst(rst));  
  
  const SLOWCLOCK_SIZE5 = $clog2(8333333);   //12
  counter frame_rate5(#SIZE(SLOWCLOCK_SIZE5),.clk(clk),.rst(rst));  

  const SLOWCLOCK_SIZE6 = $clog2(9090909);  //11
  counter frame_rate6(#SIZE(SLOWCLOCK_SIZE6),.clk(clk),.rst(rst));  
  
  const SLOWCLOCK_SIZE7 = $clog2(10000000);  //10
  counter frame_rate7(#SIZE(SLOWCLOCK_SIZE7),.clk(clk),.rst(rst));  
  
  const SLOWCLOCK_SIZE8 = $clog2(11111111);  //9
  counter frame_rate8(#SIZE(SLOWCLOCK_SIZE8),.clk(clk),.rst(rst));      
  
  const SLOWCLOCK_SIZE9 = $clog2(125000000);  //8
  counter frame_rate9(#SIZE(SLOWCLOCK_SIZE9),.clk(clk),.rst(rst));      
  
  
  
  
  fsm animate(#INIT(FRAME1),.clk(clk),.rst(rst)) = {
    FRAME1,FRAME2
  };  
  
  const FRAME01 = 16b01100001;
  const FRAME02 = 16b00110001;
  const FRAME03 = 16b00011111;
  const FRAME04 = 16b11010110;
  const FRAME05 = 16b11011111;
  const FRAME06 = 16b01011110;
  const FRAME07 = 16b01111110;
  const FRAME08 = 16b00111110;
  
  const FRAME11 = 16b00000000;
  const FRAME12 = 16b00110011;
  const FRAME13 = 16b00010001;
  const FRAME14 = 16b00011111;
  const FRAME15 = 16b10010110;
  const FRAME16 = 16b11011111;
  const FRAME17 = 16b01111110;
  const FRAME18 = 16b00111110;
      

  
  
   const ROW01 = 16b11111111;
   const ROW11 = 16b01111111;
   const ROW21 = 16b00111111;
   const ROW31 = 16b00011111;
   const ROW41 = 16b00001111;
   const ROW51 = 16b00000111;
   const ROW61 = 16b00000011;
   const ROW71 = 16b00000001;
  
  
  always {
    outled = matrix_writer.outled;
    outgnd = matrix_writer.outgnd;
    frame_counter.in = 0;
    level_reg.d[7:0] = speed_sel[7:0];
    outlevel = level_reg.q;
    
   
    
    if (level_reg.q == 1) {
      frame_counter.in = frame_rate.value[SLOWCLOCK_SIZE-1];
    }
    else if (level_reg.q ==2) {
      frame_counter.in = frame_rate2.value[SLOWCLOCK_SIZE2-1];
    }
    else if (level_reg.q ==3) {
      frame_counter.in = frame_rate3.value[SLOWCLOCK_SIZE3-1];
    }    
    else if (level_reg.q ==4) {
      frame_counter.in = frame_rate4.value[SLOWCLOCK_SIZE4-1];
    }    
    else if (level_reg.q ==5) {
      frame_counter.in = frame_rate5.value[SLOWCLOCK_SIZE5-1];
    }    
    else if (level_reg.q ==6) {
      frame_counter.in = frame_rate6.value[SLOWCLOCK_SIZE6-1];
    }    
    else if (level_reg.q ==7) {
      frame_counter.in = frame_rate7.value[SLOWCLOCK_SIZE7-1];
    }    
    else if (level_reg.q ==8) {
      frame_counter.in = frame_rate8.value[SLOWCLOCK_SIZE8-1];
    }    
    else if (level_reg.q ==9) {
      frame_counter.in = frame_rate9.value[SLOWCLOCK_SIZE9-1];
    }    
    else {    
      matrix_writer.row[0][7:0] = 8x{1};
    }
    matrix_writer.row[0][7:0] = 8x{1};  

    
    
    if (selector[0] == 1){
      case(animate.q){
        animate.FRAME1:
          matrix_writer.row[0]=FRAME01[7:0];
          matrix_writer.row[1]=FRAME02[7:0];
          matrix_writer.row[2]=FRAME03[7:0];
          matrix_writer.row[3]=FRAME04[7:0];
          matrix_writer.row[4]=FRAME05[7:0];
          matrix_writer.row[5]=FRAME06[7:0];
          matrix_writer.row[6]=FRAME07[7:0];
          matrix_writer.row[7]=FRAME08[7:0];  
          if (frame_counter.out ==1){
           animate.d = animate.FRAME2;
          }
        animate.FRAME2:
          matrix_writer.row[0]=FRAME11[7:0];
          matrix_writer.row[1]=FRAME12[7:0];
          matrix_writer.row[2]=FRAME13[7:0];
          matrix_writer.row[3]=FRAME14[7:0];
          matrix_writer.row[4]=FRAME15[7:0];
          matrix_writer.row[5]=FRAME16[7:0];
          matrix_writer.row[6]=FRAME17[7:0];
          matrix_writer.row[7]=FRAME18[7:0];  
          if (frame_counter.out ==1){
           animate.d = animate.FRAME1;
          }
      }
    }
    else if (selector == 2) {
      matrix_writer.row[0]=8b11111111;
      matrix_writer.row[1]=8b11111111;
      matrix_writer.row[2]=8b11111111;
      matrix_writer.row[3]=8b11111111;
      matrix_writer.row[4]=8b11111111;
      matrix_writer.row[5]=8b11111111;
      matrix_writer.row[6]=8b11111111;
      matrix_writer.row[7]=8b11111111;       
    }
    else {
      matrix_writer.row[0]=ROW01[7:0];
      matrix_writer.row[1]=ROW11[7:0];
      matrix_writer.row[2]=ROW21[7:0];
      matrix_writer.row[3]=ROW31[7:0];
      matrix_writer.row[4]=ROW41[7:0];
      matrix_writer.row[5]=ROW51[7:0];
      matrix_writer.row[6]=ROW61[7:0];
      matrix_writer.row[7]=ROW71[7:0]; 
      
    }
}
