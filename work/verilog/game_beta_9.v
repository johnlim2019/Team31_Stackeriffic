/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_beta_9 (
    input button,
    input [2:0] speedSel,
    input updateSpeed,
    input clk,
    input rst,
    output reg [2:0] readSpeed,
    output reg [15:0] reg0_speed_frame_count,
    output reg [15:0] reg9_and_computation,
    output reg [15:0] reg11_current_line_index,
    output reg [15:0] r1_out,
    output reg [15:0] r2_out,
    output reg [15:0] r3_out,
    output reg [15:0] r4_out,
    output reg [15:0] r5_out,
    output reg [15:0] r6_out,
    output reg [15:0] r7_out,
    output reg [15:0] r8_out,
    output reg [15:0] statedebug,
    output reg [15:0] wdsel_output,
    output reg [3:0] write_addr,
    output reg [5:0] alufn,
    output reg [2:0] asel,
    output reg [2:0] bsel,
    output reg [1:0] wdselin,
    output reg we,
    output reg [3:0] regfile_read_address_a,
    output reg [3:0] regfile_read_address_b,
    output reg [15:0] read_a_data,
    output reg [15:0] read_b_data
  );
  
  
  
  reg [15:0] inputAlu_a;
  
  reg [15:0] inputAlu_b;
  
  reg [15:0] wdsel;
  
  wire [16-1:0] M_game_alu_s;
  wire [3-1:0] M_game_alu_zvn;
  reg [16-1:0] M_game_alu_x;
  reg [16-1:0] M_game_alu_y;
  reg [6-1:0] M_game_alu_op;
  alu_12 game_alu (
    .x(M_game_alu_x),
    .y(M_game_alu_y),
    .op(M_game_alu_op),
    .s(M_game_alu_s),
    .zvn(M_game_alu_zvn)
  );
  
  wire [6-1:0] M_game_controlunit_alufn;
  wire [3-1:0] M_game_controlunit_asel;
  wire [3-1:0] M_game_controlunit_bsel;
  wire [2-1:0] M_game_controlunit_wdsel;
  wire [1-1:0] M_game_controlunit_we;
  wire [4-1:0] M_game_controlunit_regfile_write_address;
  wire [4-1:0] M_game_controlunit_regfile_read_address_a;
  wire [4-1:0] M_game_controlunit_regfile_read_address_b;
  wire [16-1:0] M_game_controlunit_state;
  wire [3-1:0] M_game_controlunit_readSpeed;
  reg [16-1:0] M_game_controlunit_regfiledatab;
  reg [16-1:0] M_game_controlunit_regfiledataa;
  reg [1-1:0] M_game_controlunit_button;
  reg [3-1:0] M_game_controlunit_speedSel;
  reg [1-1:0] M_game_controlunit_updateSpeed;
  game_CU_13 game_controlunit (
    .clk(clk),
    .rst(rst),
    .regfiledatab(M_game_controlunit_regfiledatab),
    .regfiledataa(M_game_controlunit_regfiledataa),
    .button(M_game_controlunit_button),
    .speedSel(M_game_controlunit_speedSel),
    .updateSpeed(M_game_controlunit_updateSpeed),
    .alufn(M_game_controlunit_alufn),
    .asel(M_game_controlunit_asel),
    .bsel(M_game_controlunit_bsel),
    .wdsel(M_game_controlunit_wdsel),
    .we(M_game_controlunit_we),
    .regfile_write_address(M_game_controlunit_regfile_write_address),
    .regfile_read_address_a(M_game_controlunit_regfile_read_address_a),
    .regfile_read_address_b(M_game_controlunit_regfile_read_address_b),
    .state(M_game_controlunit_state),
    .readSpeed(M_game_controlunit_readSpeed)
  );
  wire [16-1:0] M_players_out_a;
  wire [16-1:0] M_players_out_b;
  wire [16-1:0] M_players_r1_out;
  wire [16-1:0] M_players_r2_out;
  wire [16-1:0] M_players_r3_out;
  wire [16-1:0] M_players_r4_out;
  wire [16-1:0] M_players_r5_out;
  wire [16-1:0] M_players_r6_out;
  wire [16-1:0] M_players_r7_out;
  wire [16-1:0] M_players_r8_out;
  wire [16-1:0] M_players_reg11_current_line_index;
  wire [16-1:0] M_players_reg0_speed_frame_count;
  wire [16-1:0] M_players_reg9_and_computation;
  reg [4-1:0] M_players_write_address;
  reg [1-1:0] M_players_we;
  reg [16-1:0] M_players_data;
  reg [4-1:0] M_players_read_address_a;
  reg [4-1:0] M_players_read_address_b;
  game_miniRegfiles_14 players (
    .clk(clk),
    .rst(rst),
    .write_address(M_players_write_address),
    .we(M_players_we),
    .data(M_players_data),
    .read_address_a(M_players_read_address_a),
    .read_address_b(M_players_read_address_b),
    .out_a(M_players_out_a),
    .out_b(M_players_out_b),
    .r1_out(M_players_r1_out),
    .r2_out(M_players_r2_out),
    .r3_out(M_players_r3_out),
    .r4_out(M_players_r4_out),
    .r5_out(M_players_r5_out),
    .r6_out(M_players_r6_out),
    .r7_out(M_players_r7_out),
    .r8_out(M_players_r8_out),
    .reg11_current_line_index(M_players_reg11_current_line_index),
    .reg0_speed_frame_count(M_players_reg0_speed_frame_count),
    .reg9_and_computation(M_players_reg9_and_computation)
  );
  
  always @* begin
    M_game_controlunit_button = button;
    M_players_we = M_game_controlunit_we;
    M_players_write_address = M_game_controlunit_regfile_write_address;
    M_players_read_address_a = M_game_controlunit_regfile_read_address_a;
    M_players_read_address_b = M_game_controlunit_regfile_read_address_b;
    M_game_controlunit_regfiledatab = M_players_out_b;
    M_game_controlunit_regfiledataa = M_players_out_a;
    M_game_controlunit_speedSel = speedSel;
    M_game_controlunit_updateSpeed = updateSpeed;
    readSpeed = M_game_controlunit_readSpeed;
    r1_out = M_players_r1_out;
    r2_out = M_players_r2_out;
    r3_out = M_players_r3_out;
    r4_out = M_players_r4_out;
    r5_out = M_players_r5_out;
    r6_out = M_players_r6_out;
    r7_out = M_players_r7_out;
    r8_out = M_players_r8_out;
    
    case (M_game_controlunit_asel)
      2'h0: begin
        inputAlu_a = M_players_out_a;
      end
      2'h1: begin
        inputAlu_a = 16'h0001;
      end
      default: begin
        inputAlu_a = 1'h0;
      end
    endcase
    
    case (M_game_controlunit_bsel)
      2'h0: begin
        inputAlu_b = M_players_out_b;
      end
      2'h1: begin
        inputAlu_b = 16'h0001;
      end
      default: begin
        inputAlu_b = 1'h0;
      end
    endcase
    M_game_alu_x = inputAlu_a;
    M_game_alu_y = inputAlu_b;
    M_game_alu_op = M_game_controlunit_alufn;
    
    case (M_game_controlunit_wdsel)
      2'h1: begin
        wdsel = 16'h0000;
      end
      2'h3: begin
        wdsel = 16'h0001;
      end
      2'h2: begin
        wdsel = 16'h000f;
      end
      default: begin
        wdsel = M_game_alu_s;
      end
    endcase
    M_players_data = wdsel;
    reg0_speed_frame_count = M_players_reg0_speed_frame_count;
    wdsel_output = wdsel;
    reg9_and_computation = M_players_reg9_and_computation;
    reg11_current_line_index = M_players_reg11_current_line_index;
    statedebug = M_game_controlunit_state;
    write_addr = M_game_controlunit_regfile_write_address;
    alufn = M_game_controlunit_alufn;
    asel = M_game_controlunit_asel;
    bsel = M_game_controlunit_bsel;
    wdselin = M_game_controlunit_wdsel;
    we = M_game_controlunit_we;
    regfile_read_address_a = M_game_controlunit_regfile_read_address_a;
    regfile_read_address_b = M_game_controlunit_regfile_read_address_b;
    read_a_data = M_players_out_a;
    read_b_data = M_players_out_b;
  end
endmodule
